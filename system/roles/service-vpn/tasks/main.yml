---
#
###  VPN SERVER - OpenVPN ###
#
# Install and configure VPN server.
#
# Logging: syslog


- name: Install packages
  apt:
    name:
      - easy-rsa
      - openvpn
    force: yes
    install_recommends: no
    state: latest


### CERTIFICATES AND KEYS
- name: Create directory for 'easy-rsa' tools
  file:
    path: /etc/openvpn/easy-rsa
    state: directory

- name: Copy 'easy-rsa' tools
  shell: >
    cp -pR
    /usr/share/easy-rsa/*
    /etc/openvpn/easy-rsa/
  args:
    creates: "{{ GISLAB_PATH_SECRET }}/gislab_vpn_ta.key"

- name: Create configuration file with filled certificate fields
  template:
    src: vars.j2
    dest: /etc/openvpn/easy-rsa/vars

- name: Remove old keys
  shell: ./easyrsa init-pki
  args:
    chdir: /etc/openvpn/easy-rsa/
    executable: /bin/bash
    creates: "{{ GISLAB_PATH_SECRET }}/gislab_vpn_ta.key"
  environment:
    EASYRSA_BATCH: 1

- name: Generate CA certificate
  shell: ./easyrsa build-ca nopass
  args:
    chdir: /etc/openvpn/easy-rsa/
    executable: /bin/bash
    creates: "{{ GISLAB_PATH_SECRET }}/gislab_vpn_ta.key"
  environment:
    EASYRSA_BATCH: 1

- name: Generate server certificate and private key
  shell: ./easyrsa build-server-full server.gis.lab nopass
  args:
    chdir: /etc/openvpn/easy-rsa/
    executable: /bin/bash
    creates: "{{ GISLAB_PATH_SECRET }}/gislab_vpn_ta.key"
  environment:
    EASYRSA_BATCH: 1

- name: Generate Diffie Hellman Parameters
  shell: ./easyrsa gen-dh
  args:
    chdir: /etc/openvpn/easy-rsa/
    executable: /bin/bash
    creates: "{{ GISLAB_PATH_SECRET }}/gislab_vpn_ta.key"

- name: Generate private key for HMAC authentication
  shell: openvpn --genkey --secret ta.key
  args:
    chdir: /etc/openvpn/easy-rsa/pki
    creates: "{{ GISLAB_PATH_SECRET }}/gislab_vpn_ta.key"

- name: Copy certificates and keys to secret directory
  shell: >
    cp
    /etc/openvpn/easy-rsa/pki/{{ item.src }}
    {{ GISLAB_PATH_SECRET }}/{{ item.dest }}
  with_items:
    - {
        src: 'ca.crt',
        dest: 'gislab_vpn_ca.crt'
      }
    - {
        src: 'private/ca.key',
        dest: 'gislab_vpn_ca.key'
      }
    - {
        src: 'dh.pem',
        dest: 'gislab_vpn_dh2048.pem'
      }
    - {
        src: 'issued/server.gis.lab.crt',
        dest: 'gislab_vpn_server.crt'
      }
    - {
        src: 'private/server.gis.lab.key',
        dest: 'gislab_vpn_server.key'
      }
    - {
        src: 'ta.key',
        dest: 'gislab_vpn_ta.key'
      }
  args:
    creates: "{{ GISLAB_PATH_SECRET }}/gislab_vpn_ta.key"

- name: Install certificates and keys
  shell: >
    cp
    {{ GISLAB_PATH_SECRET }}/{{ item }}
    /etc/openvpn/{{ item }}
  with_items:
    - gislab_vpn_ca.crt
    - gislab_vpn_ca.key
    - gislab_vpn_dh2048.pem
    - gislab_vpn_server.crt
    - gislab_vpn_server.key
    - gislab_vpn_ta.key
  notify:
    - service openvpn restart


### CONFIGURATION
- name: Install default OpenVPN configuration file
  template:
    src: openvpn.j2
    dest: /etc/default/openvpn
  notify:
    - service openvpn restart

- name: Install OpenVPN configuration file
  template:
    src: server.conf.j2
    dest: /etc/openvpn/server.conf
  notify:
    - service openvpn restart

- name: Install OpenVPN client configuration file
  template:
    src: client.conf.j2
    dest: /etc/openvpn/client.conf
  notify:
    - service openvpn restart


- meta: flush_handlers

# vim: set ts=8 sts=2 sw=2 et:
