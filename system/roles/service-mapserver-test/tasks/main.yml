---

- name: Create test user account for mapserver service tests
  shell: >
    gislab-adduser
    -g Test
    -l User
    -d "Test user account"
    -m test_mapserver_{{ GISLAB_TEST_UNIQUE_STRING }}@gis.lab
    -p {{ GISLAB_TEST_UNIQUE_STRING }}
    test_mapserver_{{ GISLAB_TEST_UNIQUE_STRING }}
  ignore_errors: yes
  changed_when: False

- name: Download example GIS data
  git:
    repo: https://github.com/gislab-npo/gisquick
    dest: /tmp/gisquick

- name: Extract example GIS data
  shell: >
    cp -a
    /tmp/gisquick/qgis/project/natural-earth
    /mnt/publish/test_mapserver_{{ GISLAB_TEST_UNIQUE_STRING }}/

- name: Test if example GIS data is installed
  shell: >
    file /mnt/publish/test_mapserver_{{ GISLAB_TEST_UNIQUE_STRING }}/natural-earth/natural-earth.sqlite
    | grep "SQLite 3.x database"
  ignore_errors: yes
  changed_when: False

- name: Test if example GIS project is installed
  shell: >
    file /mnt/publish/test_mapserver_{{ GISLAB_TEST_UNIQUE_STRING }}/natural-earth/{{ item.file }}
    | grep "{{ item.type }}"
  with_items:
    - {
        file: "central-europe.qgs",
        type: "HTML document, ASCII text, with very long lines"
    }
    - {
        file: "central-europe.meta",
        type: "ASCII text, with very long lines"
    }
  ignore_errors: yes
  changed_when: False


# WMS
- name: Test WMS GetCapabilies request without project
  shell: >
    curl
    "{{ mapserver_url }}?SERVICE=WMS&REQUEST=GetCapabilities"
    | grep 'WMS_Capabilities .* version="1.3.0"'
  ignore_errors: yes
  changed_when: False

- name: Test WMS GetCapabilies request with example GIS.lab project
  shell: >
    curl "{{ mapserver_url }}?SERVICE=WMS&REQUEST=GetCapabilities&MAP={{ qgs_project }}"
    | grep 'WMS_Capabilities .* version="1.3.0"'
  ignore_errors: yes
  changed_when: False

- name: Test WMS GetMap request with example GIS.lab project
  shell: >
    curl "{{ mapserver_url }}?SERVICE=WMS&VERSION=1.1.1&REQUEST=GetMap&MAP={{ qgs_project }}&LAYERS=Other,Western+Countries,Visegrad+Four,Roads,Places&SRS=EPSG:3857&WIDTH=1024&HEIGHT=768&TRANSPARENT=True&FORMAT=png&BBOX=651496.191979,5688462.82139,3156184.73448,7566979.22827"
    > {{ GISLAB_PATH_TMP }}/mapserver_getmap.png
    &&
    file {{ GISLAB_PATH_TMP }}/mapserver_getmap.png
    | grep "PNG image data, 1024 x 768, 8-bit/color RGBA, non-interlaced"
  ignore_errors: yes
  changed_when: False

- name: Test WMS GetLegendGraphic request with example GIS.lab project
  shell: >
    curl "{{ mapserver_url }}?SERVICE=WMS&VERSION=1.1.1&REQUEST=GetLegendGraphic&MAP={{ qgs_project }}&LAYERS=Visegrad+Four&SRS=EPSG:3857&FORMAT=png&SCALE=1155581&LAYERFONTSIZE=8&LAYERFONTBOLD=true&SYMBOLHEIGHT=3&SYMBOLWIDTH=5&ITEMFONTSIZE=8&ICONLABELSPACE=5"
    > {{ GISLAB_PATH_TMP }}/mapserver_getlegend.png
    &&
    file {{ GISLAB_PATH_TMP }}/mapserver_getlegend.png
    | grep "PNG image data, .*, 8-bit/color RGB, non-interlaced"
  ignore_errors: yes
  changed_when: False

- name: Test WMS GetFeatureinfo request with example GIS.lab project
  shell: >
    curl "{{ mapserver_url }}?SERVICE=WMS&VERSION=1.1.1&REQUEST=GetFeatureinfo&MAP={{ qgs_project }}&LAYERS=Other,Western+Countries,Visegrad+Four,Roads,Places&QUERY_LAYERS=Other,Western+Countries,Visegrad+Four,Roads,Places&SRS=EPSG:3857&HEIGHT=250&WIDTH=1107&INFO_FORMAT=application%2Fvnd.ogc.gml&X=549&Y=133&BBOX=2196900.029634,6239313.778502,2535363.190833,6315750.806776"
    | grep "<qgs:name>Presov</qgs:name>"
  ignore_errors: yes
  changed_when: False


# WFS
- name: Test WFS GetCapabilies request without project
  shell: >
    curl
    "{{ mapserver_url }}?SERVICE=WFS&REQUEST=GetCapabilities"
    | grep 'WFS_Capabilities .* version="1.0.0"'
  ignore_errors: yes
  changed_when: False

- name: Test WFS GetCapabilies request with example GIS.lab project
  shell: >
    curl "{{ mapserver_url }}?SERVICE=WFS&REQUEST=GetCapabilities&MAP={{ qgs_project }}"
    | grep 'WFS_Capabilities .* version="1.0.0"'
  ignore_errors: yes
  changed_when: False

- name: Test WFS DescribeFeatureType request with example GIS.lab project
  shell: >
    curl "{{ mapserver_url }}?SERVICE=WFS&REQUEST=DescribeFeatureType&MAP={{ qgs_project }}&typeName=qgs:Visegrad_Four"
    | grep 'element type="qgs:Visegrad_FourType"'
  ignore_errors: yes
  changed_when: False

- name: Test WFS GetFeature request with example GIS.lab project
  shell: >
    curl "{{ mapserver_url }}?SERVICE=WFS&REQUEST=GetFeature&MAP={{ qgs_project }}&typeName=qgs:Visegrad_Four&name=Slovakia"
    | grep '<qgs:name>Slovakia</qgs:name>'
  ignore_errors: yes
  changed_when: False


- name: Remove test user account used for mapserver service tests
  shell: >
    gislab-deluser
    -f
    test_mapserver_{{ GISLAB_TEST_UNIQUE_STRING }}
  ignore_errors: yes
  changed_when: False

- name: Remove example GIS data
  file:
    state: absent
    path: /tmp/gisquick

# vim: set ts=8 sts=2 sw=2 et:
