---

# GIS.lab Unit pre-installation tasks
# $ ansible-playbook --inventory=gislab-unit.inventory --private-key=<private-SSH-key-file> gislab-unit/gislab-unit.yml


- hosts: all
  become: yes
  gather_facts: false  # disable gathering Ansible facts until Python 2 is not
                       # installed or Ansible comes with Python 3 support


  tasks:
    - name: Ensure Python 2 is installed before running Ansible modules
      raw: >
        apt-get update --assume-yes
        &&
        apt-get install --assume-yes python-minimal

    - name: Gather Ansible facts
      setup:

    - name: Set GIS.lab provider
      shell: echo 'gislab-unit' > /etc/gislab_provider


    # Operating system upgrade
    - name: Install aptitude which is required for running system upgrade
      apt:
        pkg: aptitude
        force: yes
        install_recommends: no
        state: latest

    - name: Clean the contents of /var/lib/apt/lists
      shell: "{{ item }}"
      with_items:
        - rm -f /var/lib/apt/lists/* || true
        - rm -f /var/lib/apt/lists/partial/* || true

    - name: Upgrade system
      apt: upgrade=full force=yes update_cache=yes

    - name: Disable APT proxy if enabled
      lineinfile: dest=/etc/apt/apt.conf state=absent regexp="^Acquire::http::Proxy .*"


   # File system usage optimization
    - name: Optimize mount options for root partition
      lineinfile: dest=/etc/fstab
                  regexp='\/dev\/mapper\/vgmain-root \/.*ext4.*'
                  line='/dev/mapper/vgmain-root /  ext4  defaults,noatime,discard,errors=remount-ro  0 1'
                  backrefs=yes
                  state=present

    - name: Optimize mount options for storage partition
      lineinfile: dest=/etc/fstab
                  regexp='\/dev\/mapper\/vgmain-storage \/storage.*ext4.*'
                  line='/dev/mapper/vgmain-storage /storage  ext4  defaults,noatime,discard  0 2'
                  backrefs=yes
                  state=present

    - name: Move temporary files to memory filesystem
      lineinfile: dest=/etc/fstab
                  state=present
                  line='tmpfs /tmp  tmpfs  rw,nodev,nosuid,noatime,mode=1777  0 0'

    - name: Adjust swappiness
      sysctl: name="{{ item.name }}" value="{{ item.value }}" state=present sysctl_set=yes
      with_items:
        - { name: "vm.swappiness", value: "1" }
        - { name: "vm.vfs_cache_pressure", value: "50" }

    - name: Add daily cron job to discard unused blocks on SSD disk (fstrim)
      template: src=templates/cron.daily/fstrim dest=/etc/cron.daily/fstrim mode=0755

    - name: Perform first discarding of unused blocks on SSD disk now (fstrim)
      shell: bash /etc/cron.daily/fstrim

    - name: Set I/O scheduler for SSD disk
      lineinfile: dest=/etc/default/grub
                  regexp='GRUB_CMDLINE_LINUX_DEFAULT=.*'
                  line='GRUB_CMDLINE_LINUX_DEFAULT="elevator=deadline"'
                  state=present
      notify:
        - update grub


    # Boot options
    - name: Configure grub failed timeout
      lineinfile: dest=/etc/default/grub state=present line="GRUB_RECORDFAIL_TIMEOUT=5"
      notify:
        - update grub


    # Networking
    - name: Disable some problematic network adapter features (see GH 407)
      template: src=templates/network/fix-hardware-unit-hang.j2
                dest=/etc/network/if-up.d/fix-hardware-unit-hang mode=0755


    - meta: flush_handlers

    # Restart
    - name: Restart GIS.lab Unit machine
      shell: sleep 2 && shutdown -r now "GIS.lab Unit pre-installation task done"
      async: 1
      poll: 0
      ignore_errors: true


  handlers:
    - name: update grub
      command: /usr/sbin/update-grub


# vim:ft=ansible:
